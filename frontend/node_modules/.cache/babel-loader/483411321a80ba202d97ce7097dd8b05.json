{"ast":null,"code":"var _jsxFileName = \"/home/harry/Documents/Code/Data_Science/DeepLearning/CNN_projects/Potato_Disease_Classification/frontend/src/home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\nimport cblogo from \"./cblogo.PNG\";\nimport image from \"./bg.png\";\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { common } from '@material-ui/core/colors';\nimport Clear from '@material-ui/icons/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst useStyles = makeStyles(theme => ({// Your styles remain unchanged\n}));\nexport const ImageUpload = () => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const [data, setData] = useState();\n  const [image, setImage] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  let confidence = 0;\n  const sendFile = useCallback(async () => {\n    if (image && selectedFile) {\n      let formData = new FormData();\n      formData.append(\"file\", selectedFile);\n\n      try {\n        let res = await axios.post(process.env.REACT_APP_API_URL, formData);\n\n        if (res.status === 200) {\n          setData(res.data);\n        }\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      } finally {\n        setIsloading(false);\n      }\n    }\n  }, [image, selectedFile]);\n\n  const clearData = () => {\n    setData(null);\n    setImage(false);\n    setSelectedFile(null);\n    setPreview(null);\n  };\n\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl);\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n  useEffect(() => {\n    if (!preview) {\n      return;\n    }\n\n    setIsloading(true);\n    sendFile();\n  }, [preview, sendFile]); // Added sendFile as a dependency\n\n  const onSelectFile = files => {\n    if (!files || files.length === 0) {\n      setSelectedFile(undefined);\n      setImage(false);\n      setData(undefined);\n      return;\n    }\n\n    setSelectedFile(files[0]);\n    setData(undefined);\n    setImage(true);\n  };\n\n  if (data) {\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageUpload, \"RSd3RAzfQMSjwKWZhBVNhe1jJI0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/harry/Documents/Code/Data_Science/DeepLearning/CNN_projects/Potato_Disease_Classification/frontend/src/home.js"],"names":["useState","useEffect","useCallback","makeStyles","withStyles","AppBar","Toolbar","Typography","Avatar","Container","React","Card","CardContent","Paper","CardActionArea","CardMedia","Grid","TableContainer","Table","TableBody","TableHead","TableRow","TableCell","Button","CircularProgress","cblogo","image","DropzoneArea","common","Clear","axios","require","default","useStyles","theme","ImageUpload","classes","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","isLoading","setIsloading","confidence","sendFile","formData","FormData","append","res","post","process","env","REACT_APP_API_URL","status","error","console","clearData","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectFile","files","length","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport cblogo from \"./cblogo.PNG\";\r\nimport image from \"./bg.png\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // Your styles remain unchanged\r\n}));\r\n\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = useCallback(async () => {\r\n    if (image && selectedFile) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      try {\r\n        let res = await axios.post(process.env.REACT_APP_API_URL, formData);\r\n        if (res.status === 200) {\r\n          setData(res.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      } finally {\r\n        setIsloading(false);\r\n      }\r\n    }\r\n  }, [image, selectedFile]);\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview, sendFile]); // Added sendFile as a dependency\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Your JSX remains unchanged */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}