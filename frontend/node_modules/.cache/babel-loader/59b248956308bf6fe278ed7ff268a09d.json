{"ast":null,"code":"var _jsxFileName = \"/home/harry/Documents/Code/Data_Science/DeepLearning/CNN_projects/Potato_Disease_Classification/frontend/src/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // other imports...\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst useStyles = makeStyles(theme => ({// Your styles remain unchanged\n}));\nexport const ImageUpload = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const [data, setData] = useState();\n  const [image, setImage] = useState(false);\n  const sendFile = useCallback(async () => {\n    if (image && selectedFile) {\n      let formData = new FormData();\n      formData.append(\"file\", selectedFile);\n\n      try {\n        let res = await axios.post(process.env.REACT_APP_API_URL, formData);\n\n        if (res.status === 200) {\n          setData(res.data);\n        }\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    }\n  }, [image, selectedFile]);\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl);\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n  useEffect(() => {\n    if (!preview) {\n      return;\n    }\n\n    sendFile();\n  }, [preview, sendFile]);\n\n  const onSelectFile = files => {\n    if (!files || files.length === 0) {\n      setSelectedFile(undefined);\n      setImage(false);\n      setData(undefined);\n      return;\n    }\n\n    setSelectedFile(files[0]);\n    setData(undefined);\n    setImage(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageUpload, \"Gk8QpEZrLXvwoLLWt+8KqJglfyU=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/harry/Documents/Code/Data_Science/DeepLearning/CNN_projects/Potato_Disease_Classification/frontend/src/home.js"],"names":["React","useState","useEffect","useCallback","makeStyles","axios","require","default","useStyles","theme","ImageUpload","selectedFile","setSelectedFile","preview","setPreview","data","setData","image","setImage","sendFile","formData","FormData","append","res","post","process","env","REACT_APP_API_URL","status","error","console","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectFile","files","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY,CACvC;AADuC,CAAZ,CAAD,CAA5B;AAIA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMkB,QAAQ,GAAGhB,WAAW,CAAC,YAAY;AACvC,QAAIc,KAAK,IAAIN,YAAb,EAA2B;AACzB,UAAIS,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBX,YAAxB;;AACA,UAAI;AACF,YAAIY,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,iBAAvB,EAA0CP,QAA1C,CAAhB;;AACA,YAAIG,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACtBZ,UAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACD;AACF,OALD,CAKE,OAAOc,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF;AACF,GAb2B,EAazB,CAACZ,KAAD,EAAQN,YAAR,CAbyB,CAA5B;AAeAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,YAAL,EAAmB;AACjBG,MAAAA,UAAU,CAACiB,SAAD,CAAV;AACA;AACD;;AACD,UAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBvB,YAApB,CAAlB;AACAG,IAAAA,UAAU,CAACkB,SAAD,CAAV;AACA,WAAO,MAAMC,GAAG,CAACE,eAAJ,CAAoBH,SAApB,CAAb;AACD,GARQ,EAQN,CAACrB,YAAD,CARM,CAAT;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,OAAL,EAAc;AACZ;AACD;;AACDM,IAAAA,QAAQ;AACT,GALQ,EAKN,CAACN,OAAD,EAAUM,QAAV,CALM,CAAT;;AAOA,QAAMiB,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAI,CAACA,KAAD,IAAUA,KAAK,CAACC,MAAN,KAAiB,CAA/B,EAAkC;AAChC1B,MAAAA,eAAe,CAACmB,SAAD,CAAf;AACAb,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,OAAO,CAACe,SAAD,CAAP;AACA;AACD;;AACDnB,IAAAA,eAAe,CAACyB,KAAK,CAAC,CAAD,CAAN,CAAf;AACArB,IAAAA,OAAO,CAACe,SAAD,CAAP;AACAb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAVD;;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvDM;;GAAMR,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// other imports...\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // Your styles remain unchanged\r\n}));\r\n\r\nexport const ImageUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n\r\n  const sendFile = useCallback(async () => {\r\n    if (image && selectedFile) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      try {\r\n        let res = await axios.post(process.env.REACT_APP_API_URL, formData);\r\n        if (res.status === 200) {\r\n          setData(res.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      }\r\n    }\r\n  }, [image, selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    sendFile();\r\n  }, [preview, sendFile]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* JSX remains unchanged */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}